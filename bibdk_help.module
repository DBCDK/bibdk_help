<?php

/**
 * @file
 * Code for bibdk_help search.
 */
include_once('bibdk_help.search.inc');


/**
 * Implements hook_help().
 */
function bibdk_help_help($path, $arg) {
  switch($path){
    case 'admin/help#bibdk_help';
      $file = drupal_get_path('module', 'bibdk_help') . "/help/bibdk_help.html";
      return $output = file_get_contents($file);
    break;
  }
}


/**
 * Implements hook_block_info().
 */
function bibdk_help_block_info() {
  $blocks['bibdk-help-menu'] = array(
      'info' => t('Bibliotek.dk user help menu'),
      'cache' => DRUPAL_CACHE_PER_PAGE,
    );
  $blocks['bibdk-help-form'] = array(
      'info' => t('Bibliotek.dk user help search'),
      'cache' => DRUPAL_CACHE_PER_PAGE,
    );
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function bibdk_help_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'bibdk-help-menu':
      drupal_add_css(
        drupal_get_path('module', 'bibdk_help') . '/css/bibdk_help.css',
        array('group' => CSS_DEFAULT,
        'every_page' => TRUE)
      );
      $block['subject'] = t('Bibliotek.dk user help menu');
      $list = array('links' => menu_navigation_links('user-help-menu'),
               'attributes' => array('class'=> array('menu', 'user-help-menu')) );
      // first item in list ('Help') is defined in bibdk_help.install
      foreach ($list['links'] as $key => $menu_item) {
      // replace path to make it use the panel page path, and set class to make use of popup javascript
        $list['links'][$key]['href'] = str_replace('node/','help/',$menu_item['href']);
        $list['links'][$key]['attributes']['class'][] = 'bibdk-popup-link';
      }
      $block['content'] = theme('theme-bibdk-help-menu',$list);
      break;
    case 'bibdk-help-form':
      $block['subject'] = t('Bibliotek.dk user help search');
      $block['content'] = drupal_get_form('bibdk_help_search_form');
      break;
  }
  return $block;
}


/**
 * Implements hook_entity_info_alter().
 *
 * We need to modify the default node entity info by adding a new view mode to
 * be used in functions like node_view() or node_build_content().
 */
function bibdk_help_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['bibdk_help_list'] = array(
    'label' => t('User helptext list'),
    'custom settings' => TRUE,
  );
}


/**
 * Implements hook_theme().
 */
function bibdk_help_theme($existing, $type, $theme, $path) {
  $path = drupal_get_path('module', 'bibdk_help') . '/theme';
  return array(
   'theme-bibdk-help-menu' => array(
     'template'    => 'bibdk-help-menu',
     'path'        => $path,
   ),
  );
}


/**
 * Implement hook_ctools_plugin_api().
 *
 * CTools will pick up default panels pages in <modulename>.pages_default.inc
 */
function bibdk_help_ctools_plugin_api($module, $api) {
  if ($module == 'panels_mini' && $api == 'panels_default') {
    return array('version' => 1);
  }
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}


/*
* Implements hook_ctools_plugin_directory()
*/
function bibdk_help_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}
